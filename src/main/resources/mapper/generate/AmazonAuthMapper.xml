<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sky.ddtspi.dao.generate.AmazonAuthMapper">
  <resultMap id="BaseResultMap" type="com.sky.ddtspi.entity.AmazonAuth">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="merchant_id" jdbcType="VARCHAR" property="merchantId" />
    <result column="shop_name" jdbcType="VARCHAR" property="shopName" />
    <result column="customer_id" jdbcType="BIGINT" property="customerId" />
    <result column="refresh_token" jdbcType="VARCHAR" property="refreshToken" />
    <result column="nws_auth_token" jdbcType="VARCHAR" property="nwsAuthToken" />
    <result column="marketplace_id" jdbcType="VARCHAR" property="marketplaceId" />
    <result column="country_name" jdbcType="VARCHAR" property="countryName" />
    <result column="last_updated_after" jdbcType="TIMESTAMP" property="lastUpdatedAfter" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, merchant_id, shop_name, customer_id, refresh_token, nws_auth_token, marketplace_id, 
    country_name, last_updated_after, remark, status, create_by, create_time, update_by, 
    update_time
  </sql>
  <select id="selectByExample" parameterType="com.sky.ddtspi.entity.AmazonAuthExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from amazon_auth
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from amazon_auth
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from amazon_auth
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.sky.ddtspi.entity.AmazonAuthExample">
    delete from amazon_auth
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sky.ddtspi.entity.AmazonAuth">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into amazon_auth (merchant_id, shop_name, customer_id, 
      refresh_token, nws_auth_token, marketplace_id, 
      country_name, last_updated_after, remark, 
      status, create_by, create_time, 
      update_by, update_time)
    values (#{merchantId,jdbcType=VARCHAR}, #{shopName,jdbcType=VARCHAR}, #{customerId,jdbcType=BIGINT}, 
      #{refreshToken,jdbcType=VARCHAR}, #{nwsAuthToken,jdbcType=VARCHAR}, #{marketplaceId,jdbcType=VARCHAR}, 
      #{countryName,jdbcType=VARCHAR}, #{lastUpdatedAfter,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{createBy,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.sky.ddtspi.entity.AmazonAuth">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into amazon_auth
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="merchantId != null">
        merchant_id,
      </if>
      <if test="shopName != null">
        shop_name,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="refreshToken != null">
        refresh_token,
      </if>
      <if test="nwsAuthToken != null">
        nws_auth_token,
      </if>
      <if test="marketplaceId != null">
        marketplace_id,
      </if>
      <if test="countryName != null">
        country_name,
      </if>
      <if test="lastUpdatedAfter != null">
        last_updated_after,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="merchantId != null">
        #{merchantId,jdbcType=VARCHAR},
      </if>
      <if test="shopName != null">
        #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=BIGINT},
      </if>
      <if test="refreshToken != null">
        #{refreshToken,jdbcType=VARCHAR},
      </if>
      <if test="nwsAuthToken != null">
        #{nwsAuthToken,jdbcType=VARCHAR},
      </if>
      <if test="marketplaceId != null">
        #{marketplaceId,jdbcType=VARCHAR},
      </if>
      <if test="countryName != null">
        #{countryName,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdatedAfter != null">
        #{lastUpdatedAfter,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sky.ddtspi.entity.AmazonAuthExample" resultType="java.lang.Long">
    select count(*) from amazon_auth
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update amazon_auth
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.merchantId != null">
        merchant_id = #{record.merchantId,jdbcType=VARCHAR},
      </if>
      <if test="record.shopName != null">
        shop_name = #{record.shopName,jdbcType=VARCHAR},
      </if>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=BIGINT},
      </if>
      <if test="record.refreshToken != null">
        refresh_token = #{record.refreshToken,jdbcType=VARCHAR},
      </if>
      <if test="record.nwsAuthToken != null">
        nws_auth_token = #{record.nwsAuthToken,jdbcType=VARCHAR},
      </if>
      <if test="record.marketplaceId != null">
        marketplace_id = #{record.marketplaceId,jdbcType=VARCHAR},
      </if>
      <if test="record.countryName != null">
        country_name = #{record.countryName,jdbcType=VARCHAR},
      </if>
      <if test="record.lastUpdatedAfter != null">
        last_updated_after = #{record.lastUpdatedAfter,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update amazon_auth
    set id = #{record.id,jdbcType=BIGINT},
      merchant_id = #{record.merchantId,jdbcType=VARCHAR},
      shop_name = #{record.shopName,jdbcType=VARCHAR},
      customer_id = #{record.customerId,jdbcType=BIGINT},
      refresh_token = #{record.refreshToken,jdbcType=VARCHAR},
      nws_auth_token = #{record.nwsAuthToken,jdbcType=VARCHAR},
      marketplace_id = #{record.marketplaceId,jdbcType=VARCHAR},
      country_name = #{record.countryName,jdbcType=VARCHAR},
      last_updated_after = #{record.lastUpdatedAfter,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      create_by = #{record.createBy,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sky.ddtspi.entity.AmazonAuth">
    update amazon_auth
    <set>
      <if test="merchantId != null">
        merchant_id = #{merchantId,jdbcType=VARCHAR},
      </if>
      <if test="shopName != null">
        shop_name = #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=BIGINT},
      </if>
      <if test="refreshToken != null">
        refresh_token = #{refreshToken,jdbcType=VARCHAR},
      </if>
      <if test="nwsAuthToken != null">
        nws_auth_token = #{nwsAuthToken,jdbcType=VARCHAR},
      </if>
      <if test="marketplaceId != null">
        marketplace_id = #{marketplaceId,jdbcType=VARCHAR},
      </if>
      <if test="countryName != null">
        country_name = #{countryName,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdatedAfter != null">
        last_updated_after = #{lastUpdatedAfter,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sky.ddtspi.entity.AmazonAuth">
    update amazon_auth
    set merchant_id = #{merchantId,jdbcType=VARCHAR},
      shop_name = #{shopName,jdbcType=VARCHAR},
      customer_id = #{customerId,jdbcType=BIGINT},
      refresh_token = #{refreshToken,jdbcType=VARCHAR},
      nws_auth_token = #{nwsAuthToken,jdbcType=VARCHAR},
      marketplace_id = #{marketplaceId,jdbcType=VARCHAR},
      country_name = #{countryName,jdbcType=VARCHAR},
      last_updated_after = #{lastUpdatedAfter,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>